#!/usr/bin/env bash
#####################################################################
# PKI : kubeadm init phase certs all + ephemeral bootstrap creds
# 
# - Generate PKI once; set fresh creds per.
# - Run this script on the init node *only*.
# - Idempotent
# 
# ARGs: K8S_INIT_NODE  K8S_KUBEADM_CONFIG
#####################################################################

node=$1
conf=${2:-kubeadm-config.yaml}
host=$(hostname)

# Generate PKI on one (the init) node *only* 
[[ "${host,,}" =~ "${node,,}" ]] || exit 11

# Generate PKI (once) : mTLS certs & keys of control plane
[[ -d /etc/kubernetes/pki ]] || {
    echo 'Generating NEW cluster PKI @ /etc/kubernetes/pki/'
    sudo kubeadm init phase certs all --config $conf
}
# Create key for use on init/join
key=$(sudo kubeadm certs certificate-key)
# Get hash of key
hash=$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt \
        |openssl rsa -pubin -outform der 2>/dev/null \
        |openssl dgst -sha256 -hex \
        |sed 's/^.* //' \
)
# Create bootstrap tkn for init/join : "[a-z0-9]{6}.[a-z0-9]{16}"
# Unlike `kubeadm token generate`, "create" pushes the token to control-plane store.
tkn="$(sudo kubeadm token create --ttl 4h)"

# Store these creds in local file for its subsequent pull from the admin host
cat <<-EOH |tee Makefile.settings
## This file is DYNAMICALLY GENERATED by make recipe 
export K8S_CERTIFICATE_KEY := $key
export K8S_CA_CERT_HASH    := sha256:$hash
export K8S_BOOTSTRAP_TOKEN := $tkn
EOH
