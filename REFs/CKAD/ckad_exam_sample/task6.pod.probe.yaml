apiVersion: v1
kind: Pod
metadata:
  labels:
    run: ngx
  name: ngx
  namespace: ckad-ns3
spec:
  containers:
  - image: nginx
    imagePullPolicy: Always
    name: ngx
    ports:
    - containerPort: 80
      protocol: TCP
    ## Video course solution:
    readinessProbe:
      exec:
        command: ["curl", "-k", "https://172.17.0.2:8443/readyz"]
      initialDelaySeconds: 20
    ## Our (non) solution:
    # livenessProbe:
    #   tcpSocket:
    #     port: 80
    #   initialDelaySeconds: 20
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-4kvxw
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-4kvxw
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace

